snippet fun "function" !b
fun $1 ${2:($3)} = $0
endsnippet

snippet rec "recurse"
${2:($3)} = $0
endsnippet

snippet foo "test"
`!v normal yyp`
endsnippet

snippet and "function with and"
and $1 ($2) = $0
endsnippet

snippet if "if"
if $1 then $2
else $3
endsnippet

snippet let "let expression"
let
	$1
in
	$0
end
endsnippet

snippet local "local expression"
local
	$1
in
	$0
end
endsnippet

snippet test "test"
val $1_test${2:1} = $1 $0
endsnippet
